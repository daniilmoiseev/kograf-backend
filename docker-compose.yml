version: "3"

services:

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kograf
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  postgres:
    image: postgres:14.8-alpine3.18
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: kograf
    ports:
      - "5432:5432"
      - "5435:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
    networks:
      - kograf_network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    hostname: kafka
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "notification-topic:1:1,crmagent-response:1:1,alerts-extra-data:1:1,notification_inner_topic:1:1,line-diagnostic-response:1:1,decision-map-output:1:1,epd-task-topic:1:1,decision-map-history:1:1"
    networks:
      - kograf_network
    depends_on:
      - zookeeper

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - kograf_network

networks:
  kograf_network:
    driver: bridge