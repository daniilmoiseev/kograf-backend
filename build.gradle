buildscript {
	ext {
		artifactGroup = 'ru.kograf'
		artifactId = 'backend'
		artifactVersion = '1.0.1-SNAPSHOT'

		springBootVersion = '3.1.5'

		kafkaVersion = '3.3.1'
		springCloudVersion = '2021.0.0'
	}
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath 'ru.vyarus:gradle-quality-plugin:4.9.0'
	}
}

plugins {
	id 'java'
	id 'maven-publish'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.1.4'
}

repositories {
	mavenLocal()
	mavenCentral()
}

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

apply plugin: 'ru.vyarus.quality'

dependencies {
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
//	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation "org.apache.kafka:kafka-clients:$kafkaVersion"
	implementation 'org.apache.commons:commons-collections4:4.3'
//	implementation 'org.springframework.retry:spring-retry:2.0.1'

	implementation 'org.postgresql:postgresql:42.3.2'

	implementation 'com.ibm.icu:icu4j:72.1'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.4'
	implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.4'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.13.2'

	implementation 'junit:junit:4.13.2'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	compileOnly 'org.projectlombok:lombok:1.18.24'

//	implementation 'org.flywaydb:flyway-core:5.2.2'
//	implementation 'com.github.ben-manes.caffeine:caffeine:2.6.2'
	runtimeOnly 'org.postgresql:postgresql:42.3.2'

	testAnnotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'org.springframework:spring-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'commons-io:commons-io:2.11.0'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
//	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation "org.apache.kafka:kafka-clients:$kafkaVersion"
//	testImplementation 'com.h2database:h2:1.4.200'
	testImplementation 'org.apache.commons:commons-collections4:4.3'
}

quality {
	configDir = 'config/'
	checkstyle = true // false to disable automatic plugin activation
}

jar {
	enabled = false
}

bootJar {
	enabled = true
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

version "${artifactVersion}"

/*publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = "${artifactGroup}"
			artifactId = "${artifactId}"
			version = "${artifactVersion}"
			from components.java
		}
	}
	repositories {
		maven {
			allowInsecureProtocol = true
			def releasesRepoUrl = "${artifactoryUrl}/gradle-release-local"
			def snapshotsRepoUrl = "${artifactoryUrl}/gradle-dev-local"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			credentials {
				username = mavenUser
				password = mavenPassword
			}
		}
	}
}*/

test {
	useJUnitPlatform()
}
